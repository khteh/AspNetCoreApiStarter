version: 2
jobs:
  build:
    working_directory: ~/workspace
    docker:
      - image: khteh/circleci-dotnet:latest
    steps:
      - checkout
      - run: dotnet restore src
      - run: dotnet build -c Release --version-suffix $CIRCLE_BUILD_NUM --no-restore src
      - run: dotnet test -c Release src/Tests/Web.Api.Core.UnitTests/
      - run: dotnet test -c Release src/Tests/Web.Api.UnitTests/
      - run: dotnet test -c Release src/Tests/Web.Api.Infrastructure.UnitTests/
      #- run: dotnet test -c Release src/Tests/Web.Api.IntegrationTests/
      - run: dotnet publish -c Release --no-restore --no-build src
      - setup_remote_docker:
          docker_layer_caching: true
      # use a primary image that already has Docker (recommended)
      # or install it during a build like we do here
      - run:
          name: Extract FileVersion from published binary
          command: |
            exiftool src/Web.Api/bin/Release/netcoreapp3.0/publish/Web.Api.dll | grep "File Version" | awk -F":" '{ print $2 }' | xargs echo -n > version.txt
      - run:
          name: Build docker image
          command: |
            MAJOR=$(cat version.txt | awk -F"." '{ print $1 }')
            MINOR=$(cat version.txt | awk -F"." '{ print $2 }')
            VERSION=$MAJOR.$MINOR.$CIRCLE_BUILD_NUM
            docker build -t khteh/asp.netcoreapistarter:latest -t khteh/asp.netcoreapistarter:$VERSION src
      - run:
          name: Login to docker hub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Push images to docker hub
          command: |
            MAJOR=$(cat version.txt | awk -F"." '{ print $1 }')
            MINOR=$(cat version.txt | awk -F"." '{ print $2 }')
            VERSION=$MAJOR.$MINOR.$CIRCLE_BUILD_NUM
            docker push khteh/asp.netcoreapistarter:latest
            docker push khteh/asp.netcoreapistarter:$VERSION
